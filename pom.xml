<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dev.thihup</groupId>
    <artifactId>holytime</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <asm.version>9.7</asm.version>
        <nashorn.version>15.4</nashorn.version>
        <slf4j.version>2.0.12</slf4j.version>
        <log4j.version>2.23.1</log4j.version>
        <sqlite.version>3.46.0.0</sqlite.version>
        <xmlbeans.version>5.2.0</xmlbeans.version>
        <websocket.version>1.5.6</websocket.version>
        <jna.version>5.14.0</jna.version>
        <gson.version>2.10</gson.version>
        <javafx.version>22</javafx.version>
        <jaxws.rt.version>2.3.7</jaxws.rt.version>
        <jakarta.annotation-api>1.3.5</jakarta.annotation-api>
        <maven.compiler.source>23</maven.compiler.source>
        <maven.compiler.target>23</maven.compiler.target>
        <xstream.version>1.4.20</xstream.version>
        <dom4j.version>2.1.4</dom4j.version>
        <commons-imaging.version>1.0.0-alpha5</commons-imaging.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-util</artifactId>
            <version>${asm.version}</version>
        </dependency>
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-commons</artifactId>
            <version>${asm.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjdk.nashorn</groupId>
            <artifactId>nashorn-core</artifactId>
            <version>${nashorn.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>${sqlite.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlbeans</groupId>
            <artifactId>xmlbeans</artifactId>
            <version>${xmlbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.java-websocket</groupId>
            <artifactId>Java-WebSocket</artifactId>
            <version>${websocket.version}</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-jpms</artifactId>
            <version>${jna.version}</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform-jpms</artifactId>
            <version>${jna.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
            <version>${jaxws.rt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-imaging</artifactId>
            <version>${commons-imaging.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>holytime</finalName>
        <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.6.1</version>
            <executions>
                <execution>
                    <id>copy-dependencies</id>
                    <goals>
                        <goal>copy-dependencies</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.2</version>
                <executions>
                    <execution>
                        <id>delete-extra-javafx</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/dependency</directory>
                                    <includes>
                                        <include>javafx-base-${javafx.version}.jar</include>
                                        <include>javafx-controls-${javafx.version}.jar</include>
                                        <include>javafx-graphics-${javafx.version}.jar</include>
                                        <include>javafx-media-${javafx.version}.jar</include>
                                        <include>javafx-swing-${javafx.version}.jar</include>
                                        <include>javafx-web-${javafx.version}.jar</include>
                                        <include>holytime-${output.name}.zip</include>
                                    </includes>
                                </fileset>
                                <fileset>
                                    <directory>${project.build.directory}/holytime</directory>
                                </fileset>
                                <fileset>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>${output.name}.zip</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.moditect</groupId>
                <artifactId>moditect-maven-plugin</artifactId>
                <version>1.2.1.Final</version>
                <executions>
                    <execution>
                        <id>add-module-infos</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>jakarta.annotation</groupId>
                                        <artifactId>jakarta.annotation-api</artifactId>
                                        <version>${jakarta.annotation-api}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        module java.annotation {
                                            exports javax.annotation;
                                            exports javax.annotation.security;
                                            exports javax.annotation.sql;
                                        }
                                    </moduleInfoSource>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>org.dom4j</groupId>
                                        <artifactId>dom4j</artifactId>
                                        <version>${dom4j.version}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        module org.dom4j {
                                        requires transitive java.desktop;
                                        requires transitive java.xml;
                                        exports org.dom4j;
                                        exports org.dom4j.bean;
                                        exports org.dom4j.datatype;
                                        exports org.dom4j.dom;
                                        exports org.dom4j.dtd;
                                        exports org.dom4j.io;
                                        exports org.dom4j.jaxb;
                                        exports org.dom4j.rule;
                                        exports org.dom4j.rule.pattern;
                                        exports org.dom4j.swing;
                                        exports org.dom4j.tree;
                                        exports org.dom4j.util;
                                        exports org.dom4j.xpath;
                                        exports org.dom4j.xpp;
                                        }
                                    </moduleInfoSource>
                                </module>
                            </modules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.github.wiverson</groupId>
                <artifactId>jtoolprovider-plugin</artifactId>
                <version>1.0.34</version>
                <executions>
                    <execution>
                        <id>create-runtime</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>java-tool</goal>
                        </goals>
                        <configuration>
                            <toolName>jlink</toolName>
                            <writeOutputToLog>true</writeOutputToLog>
                            <writeErrorsToLog>true</writeErrorsToLog>
                            <failOnError>true</failOnError>
                            <args>
                                <arg>--module-path</arg>
                                <arg>${project.build.directory}/dependency</arg>
                                <arg>--add-modules</arg>
                                <arg>ALL-MODULE-PATH,java.se,jdk.accessibility,jdk.charsets,jdk.crypto.cryptoki,jdk.crypto.ec,jdk.dynalink,jdk.httpserver,jdk.graal.compiler,jdk.graal.compiler.management,jdk.jdwp.agent,jdk.jfr,jdk.jsobject,jdk.localedata,jdk.management,jdk.management.agent,jdk.management.jfr,jdk.naming.dns,jdk.naming.rmi,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.xml.dom,jdk.zipfs</arg>
                                <arg>--output</arg>
                                <arg>${project.build.directory}/holytime</arg>
                                <arg>--generate-cds-archive</arg>
                                <!-- The space before the enable-preview is necessary -->
                                <arg>--add-options=
                                    --enable-preview
                                    --enable-native-access=org.xerial.sqlitejdbc,com.sun.jna,javafx.graphics
<!--                                    -javaagent:holy-agent.jar-->
                                    -Xmx850m
                                    -Dsun.java2d.d3d=false
<!--                                    -XX:+UseZGC-->
                                    -XX:+UseStringDeduplication
<!--                                    -XX:+UnlockDiagnosticVMOptions -XX:+AllowArchivingWithJavaAgent -XX:-UnlockDiagnosticVMOptions-->
<!--                                    -XX:+AutoCreateSharedArchive-->
<!--                                    -XX:SharedArchiveFile=holytime.cds-->
                                </arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>co.aurasphere.maven.plugins</groupId>
                <artifactId>zip-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <inputDirectory>${project.build.directory}/holytime</inputDirectory>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <zipName>${output.name}</zipName>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>zip</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <output.name>holyrics-windows</output.name>
            </properties>
        </profile>
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <output.name>holyrics-mac</output.name>
            </properties>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <name>Linux</name>
                </os>
            </activation>
            <properties>
                <output.name>holyrics-linux</output.name>
            </properties>
        </profile>
    </profiles>

</project>
