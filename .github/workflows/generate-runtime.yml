name: Generate Holyrics runtime for Windows x64
on:
  workflow_dispatch:
    inputs:
      runtime_version:
        description: 'JDK version'
        default: 'GA'
        required: true
      javafx_version:
        description: 'JavaFX version'
        required: true
        default: '18'      
      
jobs:
  build-windows:
    runs-on: 'windows-latest'
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v1
      - name: 'Set up JDK ${{ github.event.inputs.runtime_version }}'
        uses: oracle-actions/setup-java@v1
        with:
          website: jdk.java.net
          release: ${{ github.event.inputs.runtime_version }} 
      - name: Download dependencies
        run: |
          mkdir mods
          cd mods
          echo ""
          Invoke-WebRequest -Uri https://repo1.maven.org/maven2/org/openjdk/nashorn/nashorn-core/15.3/nashorn-core-15.3.jar -OutFile nashorn-core-15.3.jar
          Invoke-WebRequest -Uri https://repo1.maven.org/maven2/org/ow2/asm/asm/9.2/asm-9.2.jar -OutFile asm-9.2.jar
          Invoke-WebRequest -Uri https://repo1.maven.org/maven2/org/ow2/asm/asm-commons/9.2/asm-commons-9.2.jar -OutFile asm-commons-9.2.jar
          Invoke-WebRequest -Uri https://repo1.maven.org/maven2/org/ow2/asm/asm-tree/9.2/asm-tree-9.2.jar -OutFile asm-tree-9.2.jar
          Invoke-WebRequest -Uri https://repo1.maven.org/maven2/org/ow2/asm/asm-analysis/9.2/asm-analysis-9.2.jar -OutFile asm-analysis-9.2.jar
          Invoke-WebRequest -Uri https://repo1.maven.org/maven2/org/ow2/asm/asm-util/9.2/asm-util-9.2.jar -OutFile asm-util-9.2.jar
          Invoke-WebRequest -Uri https://repo1.maven.org/maven2/com/sun/xml/bind/jaxb-ri/2.3.6/jaxb-ri-2.3.6.zip -OutFile jaxb-ri-2.3.6.zip
          Invoke-WebRequest -Uri https://repo1.maven.org/maven2/com/sun/xml/ws/jaxws-ri/2.3.5/jaxws-ri-2.3.5.zip -OutFile jaxws-ri-2.3.5.zip
          Invoke-WebRequest -Uri https://download2.gluonhq.com/openjfx/${{github.event.inputs.javafx_version}}/openjfx-${{github.event.inputs.javafx_version}}_windows-x64_bin-jmods.zip -OutFile openjfx-${{github.event.inputs.javafx_version}}_windows-x64_bin-jmods.zip
          

      - name: Extracting
        run: |
          cd mods
          Expand-Archive -DestinationPath . -Path jaxb-ri-2.3.6.zip
          Expand-Archive -DestinationPath . -Path jaxws-ri-2.3.5.zip
          Expand-Archive -DestinationPath . -Path openjfx-${{github.event.inputs.javafx_version}}_windows-x64_bin-jmods.zip
          
      - name: Add missing module-info to jakarta.annotation-api.jar
        run: |
          cd mods
          jdeps --generate-module-info tmp ./jaxws-ri/lib/jakarta.annotation-api.jar
          javac --patch-module=java.annotation=jaxws-ri/lib/jakarta.annotation-api.jar ./tmp/java.annotation/module-info.java
          jar uf ./jaxws-ri/lib/jakarta.annotation-api.jar -C ./tmp/java.annotation/ module-info.class
      - name: Generate runtime
        run: |
          mkdir jdk
          jlink --module-path 'mods;mods/javafx-jmods-${{github.event.inputs.javafx_version}};mods/jaxb-ri/mod;mods/jaxws-ri/lib' --add-modules ALL-MODULE-PATH,java.base,java.compiler,java.datatransfer,java.desktop,java.instrument,java.logging,java.management,java.management.rmi,java.naming,java.net.http,java.prefs,java.rmi,java.scripting,java.se,java.security.jgss,java.security.sasl,java.smartcardio,java.sql,java.sql.rowset,java.transaction.xa,java.xml,java.xml.crypto,jdk.accessibility,jdk.charsets,jdk.crypto.cryptoki,jdk.crypto.ec,jdk.dynalink,jdk.httpserver,jdk.internal.vm.ci,jdk.internal.vm.compiler,jdk.internal.vm.compiler.management,jdk.jdwp.agent,jdk.jfr,jdk.jsobject,jdk.localedata,jdk.management,jdk.management.agent,jdk.management.jfr,jdk.naming.dns,jdk.naming.rmi,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.xml.dom,jdk.zipfs --output jdk/holytime --compress 2 --generate-cds-archive -G

      - name: Upload runtime
        uses: actions/upload-artifact@v3
        with:
          name: holytime
          path: jdk
          
      - name: Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: jdk
          
  build-linux:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v1
      - name: 'Set up JDK ${{ github.event.inputs.runtime_version }}'
        uses: oracle-actions/setup-java@v1
        with:
          website: jdk.java.net
          release: ${{ github.event.inputs.runtime_version }} 
      - name: Download dependencies
        run: |
          mkdir mods
          cd mods
          echo ""
          wget -q https://repo1.maven.org/maven2/org/openjdk/nashorn/nashorn-core/15.3/nashorn-core-15.3.jar
          wget -q https://repo1.maven.org/maven2/org/ow2/asm/asm/9.2/asm-9.2.jar
          wget -q https://repo1.maven.org/maven2/org/ow2/asm/asm-commons/9.2/asm-commons-9.2.jar
          wget -q https://repo1.maven.org/maven2/org/ow2/asm/asm-tree/9.2/asm-tree-9.2.jar
          wget -q https://repo1.maven.org/maven2/org/ow2/asm/asm-analysis/9.2/asm-analysis-9.2.jar
          wget -q https://repo1.maven.org/maven2/org/ow2/asm/asm-util/9.2/asm-util-9.2.jar
          wget -q https://repo1.maven.org/maven2/com/sun/xml/bind/jaxb-ri/2.3.6/jaxb-ri-2.3.6.zip
          wget -q https://repo1.maven.org/maven2/com/sun/xml/ws/jaxws-ri/2.3.5/jaxws-ri-2.3.5.zip
          wget -q https://download2.gluonhq.com/openjfx/${{github.event.inputs.javafx_version}}/openjfx-${{github.event.inputs.javafx_version}}_linux-x64_bin-jmods.zip
      - name: Extracting
        run: |
          cd mods
          unzip -d . jaxb-ri-2.3.6.zip
          unzip -d . jaxws-ri-2.3.5.zip
          unzip -d . openjfx-${{github.event.inputs.javafx_version}}_linux-x64_bin-jmods.zip
          
      - name: Add missing module-info to jakarta.annotation-api.jar
        run: |
          cd mods
          jdeps --generate-module-info tmp ./jaxws-ri/lib/jakarta.annotation-api.jar
          javac --patch-module=java.annotation=jaxws-ri/lib/jakarta.annotation-api.jar ./tmp/java.annotation/module-info.java
          jar uf ./jaxws-ri/lib/jakarta.annotation-api.jar -C ./tmp/java.annotation/ module-info.class
      - name: Generate runtime
        run: |
          mkdir jdk
          jlink --module-path mods:mods/javafx-jmods-${{github.event.inputs.javafx_version}}:mods/jaxb-ri/mod:mods/jaxws-ri/lib --add-modules ALL-MODULE-PATH,java.base,java.compiler,java.datatransfer,java.desktop,java.instrument,java.logging,java.management,java.management.rmi,java.naming,java.net.http,java.prefs,java.rmi,java.scripting,java.se,java.security.jgss,java.security.sasl,java.smartcardio,java.sql,java.sql.rowset,java.transaction.xa,java.xml,java.xml.crypto,jdk.accessibility,jdk.charsets,jdk.crypto.cryptoki,jdk.crypto.ec,jdk.dynalink,jdk.httpserver,jdk.internal.vm.ci,jdk.internal.vm.compiler,jdk.internal.vm.compiler.management,jdk.jdwp.agent,jdk.jfr,jdk.jsobject,jdk.localedata,jdk.management,jdk.management.agent,jdk.management.jfr,jdk.naming.dns,jdk.naming.rmi,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.xml.dom,jdk.zipfs --output jdk/holytime --compress 2 --generate-cds-archive -G
          tar -cvf holytime.tar jdk
      - name: Upload runtime
        uses: actions/upload-artifact@v3
        with:
          name: holytime
          path: holytime.tar   
          
      - name: Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: holytime.tar
